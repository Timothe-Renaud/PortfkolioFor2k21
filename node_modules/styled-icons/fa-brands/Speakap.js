var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React from 'react';
import styled from 'styled-components';
export var Speakap = styled.svg.attrs({
    children: function (props) { return (props.title != null
        ? [React.createElement("title", { key: "Speakap-title" }, props.title), React.createElement("path", { fill: "currentColor", d: "M55.01 391.78C-24.4 303.59-16.95 167.42 71.65 87.64s224.8-72.96 304.21 15.24 71.96 224.36-16.64 304.14c-18.74 16.87 64.03 43.09 42.02 52.26-82.06 34.21-253.91 35.04-346.23-67.5zm213.31-211.6l38.5-40.86c-9.61-8.89-32.02-26.83-76.17-27.6-52.33-.91-95.86 28.3-96.77 79.96-.2 11.33.29 36.72 29.42 54.83 34.46 21.42 86.52 21.51 85.98 52.26-.37 21.28-26.42 25.81-38.59 25.6-2.98-.05-30.23-.46-47.61-24.62l-39.95 42.61c28.16 27.01 58.99 32.62 83.49 33.05 10.23.18 96.42.33 97.84-81 .28-15.81-2.07-39.72-28.86-56.59-34.36-21.64-84.96-19.45-84.43-49.75.41-23.25 30.96-25.37 37.53-25.26.43 0 26.62.26 39.62 17.37z", key: "k0" })
        ]
        : [React.createElement("path", { fill: "currentColor", d: "M55.01 391.78C-24.4 303.59-16.95 167.42 71.65 87.64s224.8-72.96 304.21 15.24 71.96 224.36-16.64 304.14c-18.74 16.87 64.03 43.09 42.02 52.26-82.06 34.21-253.91 35.04-346.23-67.5zm213.31-211.6l38.5-40.86c-9.61-8.89-32.02-26.83-76.17-27.6-52.33-.91-95.86 28.3-96.77 79.96-.2 11.33.29 36.72 29.42 54.83 34.46 21.42 86.52 21.51 85.98 52.26-.37 21.28-26.42 25.81-38.59 25.6-2.98-.05-30.23-.46-47.61-24.62l-39.95 42.61c28.16 27.01 58.99 32.62 83.49 33.05 10.23.18 96.42.33 97.84-81 .28-15.81-2.07-39.72-28.86-56.59-34.36-21.64-84.96-19.45-84.43-49.75.41-23.25 30.96-25.37 37.53-25.26.43 0 26.62.26 39.62 17.37z", key: "k0" })
        ]); },
    viewBox: '0 0 430 512',
    height: function (props) { return (props.height !== undefined ? props.height : props.size); },
    width: function (props) { return (props.width !== undefined ? props.width : props.size); },
    // @ts-ignore - aria is not always defined on SVG in React TypeScript types
    'aria-hidden': function (props) { return (props.title == null ? 'true' : undefined); },
    focusable: 'false',
    role: function (props) { return (props.title != null ? 'img' : undefined); },
    "fill": "currentColor",
})(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: -.125em;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: -.125em;\n  overflow: hidden;\n"])));
Speakap.displayName = 'Speakap';
export var SpeakapDimensions = { height: undefined, width: undefined };
var templateObject_1;
